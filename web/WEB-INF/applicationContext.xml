<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
 xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"  
 xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"  
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
 xsi:schemaLocation="  
         http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd  
   http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd  
   http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">  
   
     <context:annotation-config />
     <context:component-scan base-package="net.techest.ug.dao" />   
 
        <bean id="sessionFactory"  class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
              <property name="configLocation"
               value="classpath:hibernate.cfg.xml">
              </property>
        </bean>
        
        <!--数据服务-->
        <bean class="net.techest.ug.service.DBService" id="DBService"></bean>

	<!-- 配置事务管理器 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref local="sessionFactory" />
		</property>
	</bean>
<!-- 默认通知, 用于对方法的执行进行事务性拦截, 这里默认使用spring-datasouce.xml中所配置的Hibernate事务管理器 -->
	<tx:advice id="defaultAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- 如果执行时出现: "不支持只读连接", 可关闭read-only -->
			<!-- 执行判断型的方法请统一使用is* -->
			<tx:method name="*" propagation="REQUIRED" />
			<tx:method name="is*" propagation="REQUIRED" />
			<tx:method name="load*" propagation="REQUIRED" />
			<!-- 查询并返回结果集型的方法请统一使用find* -->
			<tx:method name="find*" propagation="REQUIRED" />
			<tx:method name="get*" propagation="REQUIRED"/>
			<!-- 执行验证型的方法请统一使用validate*, 主要当使用is不能明确表示方法签名时使用 -->
			<tx:method name="validate*" propagation="REQUIRED" />
			<!-- 创建/添加型的方法请统一使用add* -->
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="create*" propagation="REQUIRED" />
			<!-- 修改/更新型的方法请统一使用update* -->
			<tx:method name="update*" propagation="REQUIRED" />
			<!-- 修改/更新型的方法请统一使用update* -->
			<tx:method name="save*" propagation="REQUIRED" />
			<!-- 删除/移除型的方法请统一使用remove* -->
			<tx:method name="remove*" propagation="REQUIRED" />
			<!-- 移动/排序型的方法请统一使用move* -->
			<tx:method name="move*" propagation="REQUIRED" />
			<!-- 当业务逻辑较为复杂, 不能简单的用以上名称来明确表示方式签名时, 请统一使用execute* -->
			<tx:method name="execute*" propagation="REQUIRED" />
			<tx:method name="quick*" propagation="REQUIRED" />
			<tx:method name="login*" propagation="REQUIRED" />
			<!-- 以上定义了一组常用的方法命名, 名称以OOP习惯的称谓来命名,不以上述方式命名的方法，将不受事务控制。-->
		</tx:attributes>
	</tx:advice>

	<!-- 请在这里定义切面 -->
	<aop:config>
		<!-- Begin,事务控制在bo层,可以根据业务的需要考虑将事务控制在其他层上 -->
		 <aop:pointcut id="taskManageServicePoint"
			expression="execution(* net.techest.ug.service.DBService.*(..))" />  
            
		<aop:advisor advice-ref="defaultAdvice"
			pointcut-ref="taskManageServicePoint" />
                <!-- End -->
	</aop:config>
        
	<tx:annotation-driven mode="aspectj"/>
        <aop:aspectj-autoproxy/>  

</beans>
